// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agent_state.proto

#include "agent_state.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace agent_state {

inline constexpr TaskParameterValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR TaskParameterValue::TaskParameterValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TaskParameterValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskParameterValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskParameterValueDefaultTypeInternal() {}
  union {
    TaskParameterValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskParameterValueDefaultTypeInternal _TaskParameterValue_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR State_CostWeightsEntry_DoNotUse::State_CostWeightsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct State_CostWeightsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR State_CostWeightsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~State_CostWeightsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    State_CostWeightsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 State_CostWeightsEntry_DoNotUseDefaultTypeInternal _State_CostWeightsEntry_DoNotUse_default_instance_;

inline constexpr SimState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        qpos_{},
        qvel_{},
        act_{},
        mocap_pos_{},
        mocap_quat_{},
        userdata_{},
        time_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SimState::SimState(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SimStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimStateDefaultTypeInternal() {}
  union {
    SimState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimStateDefaultTypeInternal _SimState_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR State_TaskParametersEntry_DoNotUse::State_TaskParametersEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct State_TaskParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR State_TaskParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~State_TaskParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    State_TaskParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 State_TaskParametersEntry_DoNotUseDefaultTypeInternal _State_TaskParametersEntry_DoNotUse_default_instance_;

inline constexpr State::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_parameters_{},
        cost_weights_{},
        sim_state_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR State::State(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateDefaultTypeInternal() {}
  union {
    State _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateDefaultTypeInternal _State_default_instance_;
}  // namespace agent_state
static ::_pb::Metadata file_level_metadata_agent_5fstate_2eproto[5];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_agent_5fstate_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_agent_5fstate_2eproto = nullptr;
const ::uint32_t TableStruct_agent_5fstate_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::agent_state::SimState, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::agent_state::SimState, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::agent_state::SimState, _impl_.time_),
    PROTOBUF_FIELD_OFFSET(::agent_state::SimState, _impl_.qpos_),
    PROTOBUF_FIELD_OFFSET(::agent_state::SimState, _impl_.qvel_),
    PROTOBUF_FIELD_OFFSET(::agent_state::SimState, _impl_.act_),
    PROTOBUF_FIELD_OFFSET(::agent_state::SimState, _impl_.mocap_pos_),
    PROTOBUF_FIELD_OFFSET(::agent_state::SimState, _impl_.mocap_quat_),
    PROTOBUF_FIELD_OFFSET(::agent_state::SimState, _impl_.userdata_),
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::agent_state::TaskParameterValue, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::agent_state::TaskParameterValue, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::agent_state::TaskParameterValue, _impl_.value_),
    PROTOBUF_FIELD_OFFSET(::agent_state::State_TaskParametersEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::agent_state::State_TaskParametersEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::agent_state::State_TaskParametersEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::agent_state::State_TaskParametersEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::agent_state::State_CostWeightsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::agent_state::State_CostWeightsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::agent_state::State_CostWeightsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::agent_state::State_CostWeightsEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::agent_state::State, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::agent_state::State, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::agent_state::State, _impl_.sim_state_),
    PROTOBUF_FIELD_OFFSET(::agent_state::State, _impl_.task_parameters_),
    PROTOBUF_FIELD_OFFSET(::agent_state::State, _impl_.cost_weights_),
    0,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 15, -1, sizeof(::agent_state::SimState)},
        {22, -1, -1, sizeof(::agent_state::TaskParameterValue)},
        {33, 43, -1, sizeof(::agent_state::State_TaskParametersEntry_DoNotUse)},
        {45, 55, -1, sizeof(::agent_state::State_CostWeightsEntry_DoNotUse)},
        {57, 68, -1, sizeof(::agent_state::State)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::agent_state::_SimState_default_instance_._instance,
    &::agent_state::_TaskParameterValue_default_instance_._instance,
    &::agent_state::_State_TaskParametersEntry_DoNotUse_default_instance_._instance,
    &::agent_state::_State_CostWeightsEntry_DoNotUse_default_instance_._instance,
    &::agent_state::_State_default_instance_._instance,
};
const char descriptor_table_protodef_agent_5fstate_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\021agent_state.proto\022\013agent_state\"\240\001\n\010Sim"
    "State\022\021\n\004time\030\001 \001(\001H\000\210\001\001\022\020\n\004qpos\030\002 \003(\001B\002"
    "\020\001\022\020\n\004qvel\030\003 \003(\001B\002\020\001\022\017\n\003act\030\004 \003(\001B\002\020\001\022\025\n"
    "\tmocap_pos\030\005 \003(\001B\002\020\001\022\026\n\nmocap_quat\030\006 \003(\001"
    "B\002\020\001\022\024\n\010userdata\030\007 \003(\001B\002\020\001B\007\n\005_time\"E\n\022T"
    "askParameterValue\022\021\n\007numeric\030\001 \001(\001H\000\022\023\n\t"
    "selection\030\002 \001(\tH\000B\007\n\005value\"\271\002\n\005State\022(\n\t"
    "sim_state\030\001 \001(\0132\025.agent_state.SimState\022\?"
    "\n\017task_parameters\030\002 \003(\0132&.agent_state.St"
    "ate.TaskParametersEntry\0229\n\014cost_weights\030"
    "\003 \003(\0132#.agent_state.State.CostWeightsEnt"
    "ry\032V\n\023TaskParametersEntry\022\013\n\003key\030\001 \001(\t\022."
    "\n\005value\030\002 \001(\0132\037.agent_state.TaskParamete"
    "rValue:\0028\001\0322\n\020CostWeightsEntry\022\013\n\003key\030\001 "
    "\001(\t\022\r\n\005value\030\002 \001(\001:\0028\001b\006proto3"
};
static ::absl::once_flag descriptor_table_agent_5fstate_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_agent_5fstate_2eproto = {
    false,
    false,
    590,
    descriptor_table_protodef_agent_5fstate_2eproto,
    "agent_state.proto",
    &descriptor_table_agent_5fstate_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_agent_5fstate_2eproto::offsets,
    file_level_metadata_agent_5fstate_2eproto,
    file_level_enum_descriptors_agent_5fstate_2eproto,
    file_level_service_descriptors_agent_5fstate_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_agent_5fstate_2eproto_getter() {
  return &descriptor_table_agent_5fstate_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_agent_5fstate_2eproto(&descriptor_table_agent_5fstate_2eproto);
namespace agent_state {
// ===================================================================

class SimState::_Internal {
 public:
  using HasBits = decltype(std::declval<SimState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SimState, _impl_._has_bits_);
  static void set_has_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

SimState::SimState(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agent_state.SimState)
}
inline PROTOBUF_NDEBUG_INLINE SimState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        qpos_{visibility, arena, from.qpos_},
        qvel_{visibility, arena, from.qvel_},
        act_{visibility, arena, from.act_},
        mocap_pos_{visibility, arena, from.mocap_pos_},
        mocap_quat_{visibility, arena, from.mocap_quat_},
        userdata_{visibility, arena, from.userdata_} {}

SimState::SimState(
    ::google::protobuf::Arena* arena,
    const SimState& from)
    : ::google::protobuf::Message(arena) {
  SimState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.time_ = from._impl_.time_;

  // @@protoc_insertion_point(copy_constructor:agent_state.SimState)
}
inline PROTOBUF_NDEBUG_INLINE SimState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        qpos_{visibility, arena},
        qvel_{visibility, arena},
        act_{visibility, arena},
        mocap_pos_{visibility, arena},
        mocap_quat_{visibility, arena},
        userdata_{visibility, arena} {}

inline void SimState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_ = {};
}
SimState::~SimState() {
  // @@protoc_insertion_point(destructor:agent_state.SimState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SimState::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SimState::Clear() {
// @@protoc_insertion_point(message_clear_start:agent_state.SimState)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.qpos_.Clear();
  _impl_.qvel_.Clear();
  _impl_.act_.Clear();
  _impl_.mocap_pos_.Clear();
  _impl_.mocap_quat_.Clear();
  _impl_.userdata_.Clear();
  _impl_.time_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SimState::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> SimState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SimState, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SimState_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional double time = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(SimState, _impl_.time_)}},
    // repeated double qpos = 2 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SimState, _impl_.qpos_)}},
    // repeated double qvel = 3 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SimState, _impl_.qvel_)}},
    // repeated double act = 4 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SimState, _impl_.act_)}},
    // repeated double mocap_pos = 5 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SimState, _impl_.mocap_pos_)}},
    // repeated double mocap_quat = 6 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SimState, _impl_.mocap_quat_)}},
    // repeated double userdata = 7 [packed = true];
    {::_pbi::TcParser::FastF64P1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(SimState, _impl_.userdata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional double time = 1;
    {PROTOBUF_FIELD_OFFSET(SimState, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated double qpos = 2 [packed = true];
    {PROTOBUF_FIELD_OFFSET(SimState, _impl_.qpos_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double qvel = 3 [packed = true];
    {PROTOBUF_FIELD_OFFSET(SimState, _impl_.qvel_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double act = 4 [packed = true];
    {PROTOBUF_FIELD_OFFSET(SimState, _impl_.act_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double mocap_pos = 5 [packed = true];
    {PROTOBUF_FIELD_OFFSET(SimState, _impl_.mocap_pos_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double mocap_quat = 6 [packed = true];
    {PROTOBUF_FIELD_OFFSET(SimState, _impl_.mocap_quat_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated double userdata = 7 [packed = true];
    {PROTOBUF_FIELD_OFFSET(SimState, _impl_.userdata_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SimState::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:agent_state.SimState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional double time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_time(), target);
  }

  // repeated double qpos = 2 [packed = true];
  if (this->_internal_qpos_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_qpos(), target);
  }

  // repeated double qvel = 3 [packed = true];
  if (this->_internal_qvel_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_qvel(), target);
  }

  // repeated double act = 4 [packed = true];
  if (this->_internal_act_size() > 0) {
    target = stream->WriteFixedPacked(4, _internal_act(), target);
  }

  // repeated double mocap_pos = 5 [packed = true];
  if (this->_internal_mocap_pos_size() > 0) {
    target = stream->WriteFixedPacked(5, _internal_mocap_pos(), target);
  }

  // repeated double mocap_quat = 6 [packed = true];
  if (this->_internal_mocap_quat_size() > 0) {
    target = stream->WriteFixedPacked(6, _internal_mocap_quat(), target);
  }

  // repeated double userdata = 7 [packed = true];
  if (this->_internal_userdata_size() > 0) {
    target = stream->WriteFixedPacked(7, _internal_userdata(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agent_state.SimState)
  return target;
}

::size_t SimState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:agent_state.SimState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double qpos = 2 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_qpos_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double qvel = 3 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_qvel_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double act = 4 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_act_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double mocap_pos = 5 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_mocap_pos_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double mocap_quat = 6 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_mocap_quat_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double userdata = 7 [packed = true];
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_userdata_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // optional double time = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SimState::_class_data_ = {
    SimState::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SimState::GetClassData() const {
  return &_class_data_;
}

void SimState::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SimState*>(&to_msg);
  auto& from = static_cast<const SimState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agent_state.SimState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_qpos()->MergeFrom(from._internal_qpos());
  _this->_internal_mutable_qvel()->MergeFrom(from._internal_qvel());
  _this->_internal_mutable_act()->MergeFrom(from._internal_act());
  _this->_internal_mutable_mocap_pos()->MergeFrom(from._internal_mocap_pos());
  _this->_internal_mutable_mocap_quat()->MergeFrom(from._internal_mocap_quat());
  _this->_internal_mutable_userdata()->MergeFrom(from._internal_userdata());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_time(from._internal_time());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SimState::CopyFrom(const SimState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agent_state.SimState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SimState::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SimState::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SimState::InternalSwap(SimState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.qpos_.InternalSwap(&other->_impl_.qpos_);
  _impl_.qvel_.InternalSwap(&other->_impl_.qvel_);
  _impl_.act_.InternalSwap(&other->_impl_.act_);
  _impl_.mocap_pos_.InternalSwap(&other->_impl_.mocap_pos_);
  _impl_.mocap_quat_.InternalSwap(&other->_impl_.mocap_quat_);
  _impl_.userdata_.InternalSwap(&other->_impl_.userdata_);
        swap(_impl_.time_, other->_impl_.time_);
}

::google::protobuf::Metadata SimState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_5fstate_2eproto_getter, &descriptor_table_agent_5fstate_2eproto_once,
      file_level_metadata_agent_5fstate_2eproto[0]);
}
// ===================================================================

class TaskParameterValue::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::agent_state::TaskParameterValue, _impl_._oneof_case_);
};

TaskParameterValue::TaskParameterValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agent_state.TaskParameterValue)
}
inline PROTOBUF_NDEBUG_INLINE TaskParameterValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

TaskParameterValue::TaskParameterValue(
    ::google::protobuf::Arena* arena,
    const TaskParameterValue& from)
    : ::google::protobuf::Message(arena) {
  TaskParameterValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kNumeric:
        _impl_.value_.numeric_ = from._impl_.value_.numeric_;
        break;
      case kSelection:
        new (&_impl_.value_.selection_) decltype(_impl_.value_.selection_){arena, from._impl_.value_.selection_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:agent_state.TaskParameterValue)
}
inline PROTOBUF_NDEBUG_INLINE TaskParameterValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void TaskParameterValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TaskParameterValue::~TaskParameterValue() {
  // @@protoc_insertion_point(destructor:agent_state.TaskParameterValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TaskParameterValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_value()) {
    clear_value();
  }
  _impl_.~Impl_();
}

void TaskParameterValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:agent_state.TaskParameterValue)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (value_case()) {
    case kNumeric: {
      // No need to clear
      break;
    }
    case kSelection: {
      _impl_.value_.selection_.Destroy();
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


PROTOBUF_NOINLINE void TaskParameterValue::Clear() {
// @@protoc_insertion_point(message_clear_start:agent_state.TaskParameterValue)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TaskParameterValue::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 0, 48, 2> TaskParameterValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TaskParameterValue_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double numeric = 1;
    {PROTOBUF_FIELD_OFFSET(TaskParameterValue, _impl_.value_.numeric_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
    // string selection = 2;
    {PROTOBUF_FIELD_OFFSET(TaskParameterValue, _impl_.value_.selection_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\0\11\0\0\0\0\0"
    "agent_state.TaskParameterValue"
    "selection"
  }},
};

::uint8_t* TaskParameterValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:agent_state.TaskParameterValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (value_case()) {
    case kNumeric: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this->_internal_numeric(), target);
      break;
    }
    case kSelection: {
      const std::string& _s = this->_internal_selection();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agent_state.TaskParameterValue.selection");
      target = stream->WriteStringMaybeAliased(2, _s, target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agent_state.TaskParameterValue)
  return target;
}

::size_t TaskParameterValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:agent_state.TaskParameterValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (value_case()) {
    // double numeric = 1;
    case kNumeric: {
      total_size += 9;
      break;
    }
    // string selection = 2;
    case kSelection: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_selection());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TaskParameterValue::_class_data_ = {
    TaskParameterValue::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TaskParameterValue::GetClassData() const {
  return &_class_data_;
}

void TaskParameterValue::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TaskParameterValue*>(&to_msg);
  auto& from = static_cast<const TaskParameterValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agent_state.TaskParameterValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kNumeric: {
      _this->_internal_set_numeric(from._internal_numeric());
      break;
    }
    case kSelection: {
      _this->_internal_set_selection(from._internal_selection());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskParameterValue::CopyFrom(const TaskParameterValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agent_state.TaskParameterValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TaskParameterValue::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TaskParameterValue::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TaskParameterValue::InternalSwap(TaskParameterValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata TaskParameterValue::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_5fstate_2eproto_getter, &descriptor_table_agent_5fstate_2eproto_once,
      file_level_metadata_agent_5fstate_2eproto[1]);
}
// ===================================================================

State_TaskParametersEntry_DoNotUse::State_TaskParametersEntry_DoNotUse() {}
State_TaskParametersEntry_DoNotUse::State_TaskParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata State_TaskParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_5fstate_2eproto_getter, &descriptor_table_agent_5fstate_2eproto_once,
      file_level_metadata_agent_5fstate_2eproto[2]);
}
// ===================================================================

State_CostWeightsEntry_DoNotUse::State_CostWeightsEntry_DoNotUse() {}
State_CostWeightsEntry_DoNotUse::State_CostWeightsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata State_CostWeightsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_5fstate_2eproto_getter, &descriptor_table_agent_5fstate_2eproto_once,
      file_level_metadata_agent_5fstate_2eproto[3]);
}
// ===================================================================

class State::_Internal {
 public:
  using HasBits = decltype(std::declval<State>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(State, _impl_._has_bits_);
  static const ::agent_state::SimState& sim_state(const State* msg);
  static void set_has_sim_state(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::agent_state::SimState& State::_Internal::sim_state(const State* msg) {
  return *msg->_impl_.sim_state_;
}
State::State(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:agent_state.State)
}
inline PROTOBUF_NDEBUG_INLINE State::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        task_parameters_{visibility, arena, from.task_parameters_},
        cost_weights_{visibility, arena, from.cost_weights_} {}

State::State(
    ::google::protobuf::Arena* arena,
    const State& from)
    : ::google::protobuf::Message(arena) {
  State* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.sim_state_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::agent_state::SimState>(arena, *from._impl_.sim_state_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:agent_state.State)
}
inline PROTOBUF_NDEBUG_INLINE State::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        task_parameters_{visibility, arena},
        cost_weights_{visibility, arena} {}

inline void State::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.sim_state_ = {};
}
State::~State() {
  // @@protoc_insertion_point(destructor:agent_state.State)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void State::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.sim_state_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void State::Clear() {
// @@protoc_insertion_point(message_clear_start:agent_state.State)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_parameters_.Clear();
  _impl_.cost_weights_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.sim_state_ != nullptr);
    _impl_.sim_state_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* State::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 4, 53, 2> State::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(State, _impl_._has_bits_),
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_State_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .agent_state.SimState sim_state = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(State, _impl_.sim_state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .agent_state.SimState sim_state = 1;
    {PROTOBUF_FIELD_OFFSET(State, _impl_.sim_state_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .agent_state.TaskParameterValue> task_parameters = 2;
    {PROTOBUF_FIELD_OFFSET(State, _impl_.task_parameters_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, double> cost_weights = 3;
    {PROTOBUF_FIELD_OFFSET(State, _impl_.cost_weights_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::agent_state::SimState>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(State()._impl_.task_parameters_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::agent_state::TaskParameterValue>},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(State()._impl_.cost_weights_)>(
        1, 0, 0, 9,
        1)},
  }}, {{
    "\21\0\17\14\0\0\0\0"
    "agent_state.State"
    "task_parameters"
    "cost_weights"
  }},
};

::uint8_t* State::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:agent_state.State)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .agent_state.SimState sim_state = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::sim_state(this),
        _Internal::sim_state(this).GetCachedSize(), target, stream);
  }

  // map<string, .agent_state.TaskParameterValue> task_parameters = 2;
  if (!_internal_task_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::agent_state::TaskParameterValue>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::agent_state::TaskParameterValue,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = _internal_task_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agent_state.State.task_parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agent_state.State.task_parameters");
      }
    }
  }

  // map<string, double> cost_weights = 3;
  if (!_internal_cost_weights().empty()) {
    using MapType = ::google::protobuf::Map<std::string, double>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, double,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_DOUBLE>;
    const auto& field = _internal_cost_weights();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agent_state.State.cost_weights");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "agent_state.State.cost_weights");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:agent_state.State)
  return target;
}

::size_t State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:agent_state.State)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .agent_state.TaskParameterValue> task_parameters = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_task_parameters_size());
  for (const auto& entry : _internal_task_parameters()) {
    total_size += _pbi::MapEntryFuncs<std::string, ::agent_state::TaskParameterValue,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
  }
  // map<string, double> cost_weights = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_cost_weights_size());
  for (const auto& entry : _internal_cost_weights()) {
    total_size += _pbi::MapEntryFuncs<std::string, double,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_DOUBLE>::ByteSizeLong(entry.first, entry.second);
  }
  // .agent_state.SimState sim_state = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.sim_state_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData State::_class_data_ = {
    State::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* State::GetClassData() const {
  return &_class_data_;
}

void State::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<State*>(&to_msg);
  auto& from = static_cast<const State&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:agent_state.State)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.task_parameters_.MergeFrom(from._impl_.task_parameters_);
  _this->_impl_.cost_weights_.MergeFrom(from._impl_.cost_weights_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_sim_state()->::agent_state::SimState::MergeFrom(
        from._internal_sim_state());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void State::CopyFrom(const State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:agent_state.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool State::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* State::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void State::InternalSwap(State* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.task_parameters_.InternalSwap(&other->_impl_.task_parameters_);
  _impl_.cost_weights_.InternalSwap(&other->_impl_.cost_weights_);
  swap(_impl_.sim_state_, other->_impl_.sim_state_);
}

::google::protobuf::Metadata State::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_agent_5fstate_2eproto_getter, &descriptor_table_agent_5fstate_2eproto_once,
      file_level_metadata_agent_5fstate_2eproto[4]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace agent_state
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
